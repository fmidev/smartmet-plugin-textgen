parameter_mapping:
{
	# *** Default mappings: config name -> querydata name ***

	# winddirection = "WindDirection";
	# wavedirection = "WaveDirection";
	# temperature = "Temperature";
	# precipitation = "Precipitation1h";
	# cloudiness = "TotalCloudCover";
	# frost = "FrostProbability";
	# severefrost = "SevereFrostProbability";
	# relativehumidity = "Humidity";
	# windspeed = "WindSpeedMS";
	# thunder = "ProbabilityThunderstorm";
	# precipitationtype = "PrecipitationType";
	# precipitationform = "PrecipitationForm";
	# precipitationprobability = "PoP";
	# roadtemperature = "RoadTemperature";
	# roadcondition = "RoadCondition";
	# waveheight = "SigWaveHeight";
	# roadwarning = "RoadWarning";
	# forestfireindex = "ForestFireWarning";
	# evaporation = "Evaporation";
	# dewpoint = "DewPoint";
	# gustspeed = "HourlyMaximumGust";
	# pressure = "Pressure";
	# fog = "FogIntensity";
	# maximumwind = "HourlyMaximumWindSpeed";
	# effectivetemperaturesum = "EffectiveTemperatureSum";
	# precipitationrate = "PrecipitationRate";
	# waterequivalentofsnow" = "WaterEquivalentOfSnow";
	# effectivetemperaturesum = "GrowthPeriodOnOff";

	# *** Modified mappings ***
	# precipitationform = "PotentialPrecipitationForm";
}

misc:
{
	timeformat			= "iso";
	language			= "fi";
	locale				= "fi_FI.UTF-8";
	formatter			= "html";
};

area:
{
	timezone:
	{
		default = "Europe/Helsinki";
	};

	marine:
	{
		default = false;
		B1 = true;
		B2 = true;
		B3 = true;
	};
	mountain:
	{
		default = false;
	};
};

mask:
{
# masks fetched from svg-file
#  land = "maps/sonera/suomi.svg";
  coast = "maps/merialueet/rannikko.svg:10";
# masks fetched from PostGIS database
  land = "Finland";
#  coast = "coastmask";
};

output_document:
{
	sections = ["title","part1","part2"];

	common_settings:
	{
		timesettings:
		{
			night:
			{
				starthour = 18;
				maxstarthour = 23;
				endhour = 6;
			};
			day:
			{
				starthour = 6;
				maxstarthour = 12;
				endhour = 18;
			};
		};

		seasonal_settings:
		{
			wintertime:
			{
				day:
				{
					temperature_max_interval = 5;
					temperature_clamp_down = false;
				};
				night:
				{
					temperature_max_interval = 5;
					temperature_clamp_down = false;
				};
				morning_temperature:
				{
					starthour = 8;
					endhour = 8;
				};			
				day_temperature:
				{
					starthour = 14;
					endhour = 14;
				};
			};
			summertime:
			{
				day:
				{
					temperature_max_interval = 5;
					temperature_clamp_down = true;
				};
				night:
				{
					temperature_max_interval = 5;
					temperature_clamp_down = true;
				};
				morning_temperature:
				{
					starthour = 8;
					endhour = 8;
				};
				day_temperature:
				{
					starthour = 13;
					endhour = 17;
				};
			
				startdate = "0401";
				enddate = "0930";
			};
		};
	};


	title:
	{
	        period:	{ type = "now";	};
		content	= "none";
	        header: 
		{ 
#		  type		= "report_time";
#		  type		= "report_area";
		  type		= "report_location";
		  colon		= false;
	          html: { level = 2; };
		};
	};

	part1:
	{
		period: 
		{ 
			type = "until"; 
			days = 1;
			endhour = 6;
			switchhour = 12;
		};
		header:
		{
			type = "until";
			colon = "true";
			html: { level = 4; };
		};


		content = ["weather_forecast","temperature_anomaly","temperature_max36hours","wind_anomaly","frost_onenight","wind_overview"];

		story:
		{
			weather_forecast:
			{
				timesettings = "use output_document.common_settings.timesettings";

				dry_weather_limit = 0.0125; // mm/h
				generally_limit = 90;	// percentage
				someplaces_limit = 10;	// percentage
				manyplaces_limit = 50;	// percentage
			};

			temperature_max36hours:
			{
				timesettings = "use output_document.common_settings.timesettings";
				seasonal_settings = "use output_document.common_settings.seasonal_settings";

				frost_story = "frost_onenight";
				tonight: { phrases = "none!"; };
				};

			temperature_anomaly:
			{
				timesettings = "use output_document.common_settings.timesettings";
				seasonal_settings = "use output_document.common_settings.seasonal_settings";

				today: { phrases = "today"; };
				next_day: { phrases = "weekday"; };
				tonight: { phrases = "weekday"; };
				next_night: { phrases = "weekday"; };
			};
			wind_anomaly:
			{
				reuse_temperature_anomaly = "use output_document.part1.story.temperature_anomaly";

				generate_wind_cooling_sentence = false;
			};

			wind_overview:
			{
				timesettings = "use output_document.common_settings.timesettings";

				max_error_wind_speed = 2.0;
				max_error_wind_direction = 4.0;
				wind_speed_threshold = 3.0;
				wind_direction_threshold = 45;

				today: { phrases = "today"; };
				next_day: { phrases = "weekday"; };
				tonight: { phrases = "weekday"; };
				next_night: { phrases = "weekday"; };
			};

		};
	};

	part2:
	{
		content = ["weather_forecast","temperature_anomaly","temperature_max36hours","wind_anomaly","frost_onenight","wind_overview"];

		period: 
		{ 
			  type = "from_until"; 
			  startday = 1;
        		  starthour = 6;
        		  endhour = 6;
        		  switchhour = 12;
        		  days = 1;
		};
	        header:
		{
			type = "from_until";
			colon = true;
        		html: { level = 4; };
		};
		story:
		{
			reuse_part1 = "use output_document.part1.story";
		};
	};

};

# unit format definitions
unit_format:
{
	celsius		= "phrase";
	meterspersecond	= "SI";
	millimeters	= "phrase";
	percent		= "phrase";
};

# querydata definitons
querydata:
{
	pal_skandinavia_pintahistoria = "/usr/share/smartmet/test/data/pal/";
#	pal_skandinavia_maanpinta = "/smartmet/data/pal/skandinavia/maanpinta/querydata/";
#	kriging_suomi_snow = "/smartmet/data/kriging/suomi/snow/querydata/";
#	pal_suomi_kasvukausi = "/smartmet/data/pal/suomi/kasvukausi/querydata/";
	klimatologia = "data/tmax_textgen.sqd";
};

# forecast data definitions
forecast_data:
{
	default_forecast			= "use querydata.pal_skandinavia_pintahistoria";

#	severefrost_forecast			= "use querydata.pal_skandinavia_maanpinta";
#	frost_forecast				= "use querydata.pal_skandinavia_maanpinta";
#       effectivetemperaturesum_forecast	= "use querydata.pal_suomi_kasvukausi";
#       waterequivalentofsnow_forecast		= "use querydata.kriging_suomi_snow";
        fractiles_climatology			= "use querydata.klimatologia";
};

geometry_tables:
{
	# Default values for server, schema, table, field
	server	= ""; # Default postgis-server in gis.conf
	# Default geometry source: Suomen kunnat
	schema	= "fminames";
	table	= "kunnat";
	field	= "kuntanimi";

	# Additional geometry tables
	additional_tables:
	(
		{
			# Default values of server and schema can be overwritten here if needed
			# Suomen maakunnat
			table	= "maakunnat";
			field 	= "maaknimi";	
		},
		{
			schema	= "natural_earth";
			table	= "admin_0_countries";
			field	= "name";	
		}
	);	
};

